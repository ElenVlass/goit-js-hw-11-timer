{"version":3,"sources":["js/refs.js","js/index.js"],"names":["daysCount","document","querySelector","hoursCount","minsCount","secsCount","CountdownTimer","selector","targetDate","intervalId","Date","getTime","start","setInterval","currentTime","now","deltaTime","clockParts","createClockParts","setClockInterface","setTimeout","clearInterval","time","days","String","Math","floor","padStart","hours","mins","secs","textContent","timer"],"mappings":";;;AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACXA,UAAWC,SAASC,cAAc,uBAClCC,WAAYF,SAASC,cAAc,wBACnCE,UAAWH,SAASC,cAAc,uBAClCG,UAAWJ,SAASC,cAAc,wBAJvB,QAAA,QAAA;;AC0Cf,aA1CA,QAAA,wBACA,IAAA,EAAA,EAAA,QAAA,cAyCA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAtCMI,IAAAA,EAAAA,WACUC,SAAAA,EAAAA,EAAUC,GAAY,EAAA,KAAA,GACzBD,KAAAA,SAAWA,EACXE,KAAAA,WAAa,KACbD,KAAAA,WAAa,IAAIE,KAAQF,GAAAA,OAAAA,IAAcG,UAEvCC,KAAAA,QAgCb,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QA7BI,MAAA,WAAQ,IAAA,EAAA,KACCH,KAAAA,WAAaI,YAAY,WACpBC,IAAAA,EAAcJ,KAAKK,MACnBC,EAAY,EAAKR,WAAaM,EAC9BG,EAAa,EAAKC,iBAAiBF,GACzC,EAAKG,kBAAkBF,GACvBG,WAAW,WACPC,cAAc,EAAKZ,aACpBO,IACJ,OAoBX,CAAA,IAAA,mBAjBA,MAAA,SAAiBM,GAMN,MAAA,CAAEC,KALIC,OAAOC,KAAKC,MAAMJ,EAAQ,QAAuBK,SAAS,EAAG,KAK3DC,MAJDJ,OAAOC,KAAKC,MAAOJ,EAAQ,MAAyB,OAAkBK,SAAS,EAAG,KAI1EE,KAHTL,OAAOC,KAAKC,MAAOJ,EAAQ,KAAoB,MAAaK,SAAS,EAAG,KAGzDG,KAFfN,OAAOC,KAAKC,MAAOJ,EAAQ,IAAc,MAAOK,SAAS,EAAG,QAa7E,CAAA,IAAA,oBATA,MAAA,SAA+C,GAA3BJ,IAAAA,EAAAA,EAAAA,KAAMK,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC9B9B,EAAAA,QAAAA,UAAU+B,YAAiBR,GAAAA,OAAAA,GAC3BpB,EAAAA,QAAAA,WAAW4B,YAAiBH,GAAAA,OAAAA,GAC5BxB,EAAAA,QAAAA,UAAU2B,YAAiBF,GAAAA,OAAAA,GAC3BxB,EAAAA,QAAAA,UAAU0B,YAAiBD,GAAAA,OAAAA,OAKpC,EAtCMxB,GAsCA0B,EAAQ,IAAI1B,EAAgB,WAAY","file":"js.bd4ebae5.js","sourceRoot":"../src","sourcesContent":["export default {\n    daysCount: document.querySelector('[data-value=\"days\"]'),\n    hoursCount: document.querySelector('[data-value=\"hours\"]'),\n    minsCount: document.querySelector('[data-value=\"mins\"]'),\n    secsCount: document.querySelector('[data-value=\"secs\"]'),\n}","import '../styles/styles.css';\nimport refs from './refs.js';\n\n\nclass CountdownTimer {\n    constructor(selector, targetDate) {\n        this.selector = selector;\n        this.intervalId = null;\n        this.targetDate = new Date(`${targetDate}`).getTime();\n          \n        this.start();\n    }\n    \n    start() {\n        this.intervalId = setInterval(() => {\n            const currentTime = Date.now();\n            const deltaTime = this.targetDate - currentTime;\n            const clockParts = this.createClockParts(deltaTime);\n            this.setClockInterface(clockParts);\n            setTimeout(() => {\n                clearInterval(this.intervalId);\n            }, deltaTime);\n        }, 1000);\n    }\n\ncreateClockParts(time) {\n    const days = String(Math.floor(time / (1000 * 60 * 60 * 24))).padStart(2, '0');\n    const hours = String(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))).padStart(2, '0');\n    const mins = String(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60))).padStart(2, '0');\n    const secs = String(Math.floor((time % (1000 * 60)) / 1000)).padStart(2, '0');\n\n    return { days, hours, mins, secs };\n    }\nsetClockInterface({ days, hours, mins, secs }) {\n    refs.daysCount.textContent = `${days}`;\n    refs.hoursCount.textContent = `${hours}`;\n    refs.minsCount.textContent = `${mins}`;\n    refs.secsCount.textContent = `${secs}`;\n} \n};\n\n\nconst timer = new CountdownTimer( '#timer-1', 'Apr 25, 2021');\n"]}